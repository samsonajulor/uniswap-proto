/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Swapper,
  SwapperInterface,
} from "../../../contracts/swapper.sol/Swapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_USDCTokAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ETHTokAmount",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ETHTok",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDCTok",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getETHTokReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_ETHTok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUSDCTokReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "_USDCTok",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityProviders",
    outputs: [
      {
        internalType: "uint256",
        name: "USDCTokReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ETHTokReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_USDCTokAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ETHTokAmount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ETHTokAmount",
        type: "uint256",
      },
    ],
    name: "swapETHTokForUSDCTok",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_USDCTokAmount",
        type: "uint256",
      },
    ],
    name: "swapUSDCTokForETHTok",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50730925866e1e5b629416e8199003458de8697e43ae6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739f92ffb1024fd74b43836a8e95fa74e567971d56600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611739806100c96000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063cb1652de11610066578063cb1652de1461010e578063d4eb15ff1461012a578063dbd9426714610146578063e0d2883214610177578063ec2fbe051461019357610093565b80635a4bfb88146100985780635c866d53146100b65780635f243b06146100d45780639d7de6b3146100f2575b600080fd5b6100a06101b1565b6040516100ad919061127c565b60405180910390f35b6100be610254565b6040516100cb91906112d8565b60405180910390f35b6100dc610278565b6040516100e9919061127c565b60405180910390f35b61010c60048036038101906101079190611324565b61031a565b005b61012860048036038101906101239190611324565b6105bf565b005b610144600480360381019061013f9190611364565b6108ad565b005b610160600480360381019061015b91906113bd565b610d62565b60405161016e9291906113ea565b60405180910390f35b610191600480360381019061018c9190611364565b610d86565b005b61019b61123d565b6040516101a891906112d8565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161020e91906112d8565b602060405180830381865afa15801561022b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024f9190611428565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102d491906112d8565b602060405180830381865afa1580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103159190611428565b905090565b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154101580156103ae575080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015410155b6103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e4906114b2565b60405180910390fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461043f9190611501565b9250508190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546104989190611501565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016104fa929190611535565b600060405180830381600087803b15801561051457600080fd5b505af1158015610528573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610589929190611535565b600060405180830381600087803b1580156105a357600080fd5b505af11580156105b7573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930846040518363ffffffff1660e01b815260040161061a929190611535565b600060405180830381600087803b15801561063457600080fd5b505af1158015610648573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b81526004016106a9929190611535565b600060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30846040518363ffffffff1660e01b8152600401610736929190611535565b600060405180830381600087803b15801561075057600080fd5b505af1158015610764573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b81526004016107c5929190611535565b600060405180830381600087803b1580156107df57600080fd5b505af11580156107f3573d6000803e3d6000fd5b5050505081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610849919061155e565b9250508190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546108a2919061155e565b925050819055505050565b600081116108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790611600565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161094c91906112d8565b602060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d9190611428565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109ec91906112d8565b602060405180830381865afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d9190611428565b905060008382610a3d919061155e565b90506000818584610a4e9190611620565b610a5891906116a9565b84610a639190611501565b905060008185610a739190611501565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610ad09291906116da565b602060405180830381865afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190611428565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30336040518363ffffffff1660e01b8152600401610b6d9291906116da565b602060405180830381865afa158015610b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bae9190611428565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333886040518363ffffffff1660e01b8152600401610c0c929190611535565b600060405180830381600087803b158015610c2657600080fd5b505af1158015610c3a573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330886040518363ffffffff1660e01b8152600401610c9b929190611535565b600060405180830381600087803b158015610cb557600080fd5b505af1158015610cc9573d6000803e3d6000fd5b5050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d28929190611535565b600060405180830381600087803b158015610d4257600080fd5b505af1158015610d56573d6000803e3d6000fd5b50505050505050505050565b60026020528060005260406000206000915090508060000154908060010154905082565b60008111610dc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc090611600565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610e2591906112d8565b602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e669190611428565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ec591906112d8565b602060405180830381865afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f069190611428565b905060008383610f16919061155e565b90506000818585610f279190611620565b610f3191906116a9565b83610f3c9190611501565b905060008184610f4c9190611501565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610fa99291906116da565b602060405180830381865afa158015610fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fea9190611428565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30336040518363ffffffff1660e01b81526004016110469291906116da565b602060405180830381865afa158015611063573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110879190611428565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333886040518363ffffffff1660e01b81526004016110e5929190611535565b600060405180830381600087803b1580156110ff57600080fd5b505af1158015611113573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330886040518363ffffffff1660e01b8152600401611174929190611535565b600060405180830381600087803b15801561118e57600080fd5b505af11580156111a2573d6000803e3d6000fd5b50505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611203929190611535565b600060405180830381600087803b15801561121d57600080fd5b505af1158015611231573d6000803e3d6000fd5b50505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61127681611263565b82525050565b6000602082019050611291600083018461126d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112c282611297565b9050919050565b6112d2816112b7565b82525050565b60006020820190506112ed60008301846112c9565b92915050565b600080fd5b61130181611263565b811461130c57600080fd5b50565b60008135905061131e816112f8565b92915050565b6000806040838503121561133b5761133a6112f3565b5b60006113498582860161130f565b925050602061135a8582860161130f565b9150509250929050565b60006020828403121561137a576113796112f3565b5b60006113888482850161130f565b91505092915050565b61139a816112b7565b81146113a557600080fd5b50565b6000813590506113b781611391565b92915050565b6000602082840312156113d3576113d26112f3565b5b60006113e1848285016113a8565b91505092915050565b60006040820190506113ff600083018561126d565b61140c602083018461126d565b9392505050565b600081519050611422816112f8565b92915050565b60006020828403121561143e5761143d6112f3565b5b600061144c84828501611413565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b600061149c601683611455565b91506114a782611466565b602082019050919050565b600060208201905081810360008301526114cb8161148f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061150c82611263565b915061151783611263565b92508282101561152a576115296114d2565b5b828203905092915050565b600060408201905061154a60008301856112c9565b611557602083018461126d565b9392505050565b600061156982611263565b915061157483611263565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115a9576115a86114d2565b5b828201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b60006115ea602083611455565b91506115f5826115b4565b602082019050919050565b60006020820190508181036000830152611619816115dd565b9050919050565b600061162b82611263565b915061163683611263565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561166f5761166e6114d2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006116b482611263565b91506116bf83611263565b9250826116cf576116ce61167a565b5b828204905092915050565b60006040820190506116ef60008301856112c9565b6116fc60208301846112c9565b939250505056fea2646970667358221220276438c6aa18325124729b3a15a4f6444e3f178e513a66e42183b1912e79127264736f6c634300080d0033";

type SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swapper__factory extends ContractFactory {
  constructor(...args: SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Swapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Swapper__factory {
    return super.connect(runner) as Swapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapperInterface {
    return new Interface(_abi) as SwapperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Swapper {
    return new Contract(address, _abi, runner) as unknown as Swapper;
  }
}
