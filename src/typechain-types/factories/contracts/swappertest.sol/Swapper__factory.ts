/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Swapper,
  SwapperInterface,
} from "../../../contracts/swappertest.sol/Swapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_USDCTok",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ETHTok",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ETHTok",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDCTok",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_USDCTokAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ETHTokAmount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityProviders",
    outputs: [
      {
        internalType: "uint256",
        name: "USDCTokReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ETHTokReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_USDCTokAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ETHTokAmount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ETHTokAmount",
        type: "uint256",
      },
    ],
    name: "swapETHTokForUSDCTok",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_USDCTokAmount",
        type: "uint256",
      },
    ],
    name: "swapUSDCTokForETHTok",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016033803806200160383398181016040528101906200003791906200012a565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000171565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b60008060408385031215620001445762000143620000c0565b5b6000620001548582860162000113565b9250506020620001678582860162000113565b9150509250929050565b61148280620001816000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d4eb15ff1161005b578063d4eb15ff14610102578063dbd942671461011e578063e0d288321461014f578063ec2fbe051461016b57610088565b80630902f1ac1461008d5780635c866d53146100ac5780639cd441da146100ca5780639d7de6b3146100e6575b600080fd5b610095610189565b6040516100a3929190610f6d565b60405180910390f35b6100b46102ca565b6040516100c19190610fd7565b60405180910390f35b6100e460048036038101906100df9190611023565b6102ee565b005b61010060048036038101906100fb9190611023565b6104e8565b005b61011c60048036038101906101179190611063565b610940565b005b610138600480360381019061013391906110bc565b610c25565b604051610146929190610f6d565b60405180910390f35b61016960048036038101906101649190611063565b610c49565b005b610173610f2e565b6040516101809190610fd7565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101e59190610fd7565b602060405180830381865afa158015610202573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022691906110fe565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102819190610fd7565b602060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c291906110fe565b915091509091565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161034b9392919061112b565b6020604051808303816000875af115801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e919061119a565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103ee9392919061112b565b6020604051808303816000875af115801561040d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610431919061119a565b5081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461048491906111f6565b9250508190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546104dd91906111f6565b925050819055505050565b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015801561057c575080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015410155b6105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b2906112a9565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106179190610fd7565b602060405180830381865afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065891906110fe565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106b79190610fd7565b602060405180830381865afa1580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f891906110fe565b90506000818361070891906111f6565b838661071491906112c9565b61071e9190611352565b90506000828461072e91906111f6565b838661073a91906112c9565b6107449190611352565b905081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546107989190611383565b9250508190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546107f19190611383565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33886040518363ffffffff1660e01b81526004016108539291906113b7565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610896919061119a565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b81526004016108f49291906113b7565b6020604051808303816000875af1158015610913573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610937919061119a565b50505050505050565b60008111610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a9061142c565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109df9190610fd7565b602060405180830381865afa1580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2091906110fe565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a7f9190610fd7565b602060405180830381865afa158015610a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac091906110fe565b90506000818385610ad191906112c9565b610adb9190611352565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610b3c9392919061112b565b6020604051808303816000875af1158015610b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7f919061119a565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610bdb9291906113b7565b6020604051808303816000875af1158015610bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1e919061119a565b5050505050565b60026020528060005260406000206000915090508060000154908060010154905082565b60008111610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c839061142c565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ce89190610fd7565b602060405180830381865afa158015610d05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2991906110fe565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d889190610fd7565b602060405180830381865afa158015610da5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc991906110fe565b90506000828285610dda91906112c9565b610de49190611352565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610e439392919061112b565b6020604051808303816000875af1158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e86919061119a565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ee49291906113b7565b6020604051808303816000875af1158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f27919061119a565b5050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b610f6781610f54565b82525050565b6000604082019050610f826000830185610f5e565b610f8f6020830184610f5e565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc182610f96565b9050919050565b610fd181610fb6565b82525050565b6000602082019050610fec6000830184610fc8565b92915050565b600080fd5b61100081610f54565b811461100b57600080fd5b50565b60008135905061101d81610ff7565b92915050565b6000806040838503121561103a57611039610ff2565b5b60006110488582860161100e565b92505060206110598582860161100e565b9150509250929050565b60006020828403121561107957611078610ff2565b5b60006110878482850161100e565b91505092915050565b61109981610fb6565b81146110a457600080fd5b50565b6000813590506110b681611090565b92915050565b6000602082840312156110d2576110d1610ff2565b5b60006110e0848285016110a7565b91505092915050565b6000815190506110f881610ff7565b92915050565b60006020828403121561111457611113610ff2565b5b6000611122848285016110e9565b91505092915050565b60006060820190506111406000830186610fc8565b61114d6020830185610fc8565b61115a6040830184610f5e565b949350505050565b60008115159050919050565b61117781611162565b811461118257600080fd5b50565b6000815190506111948161116e565b92915050565b6000602082840312156111b0576111af610ff2565b5b60006111be84828501611185565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120182610f54565b915061120c83610f54565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611241576112406111c7565b5b828201905092915050565b600082825260208201905092915050565b7f496e73756666696369656e74206c697175696469747900000000000000000000600082015250565b600061129360168361124c565b915061129e8261125d565b602082019050919050565b600060208201905081810360008301526112c281611286565b9050919050565b60006112d482610f54565b91506112df83610f54565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611318576113176111c7565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061135d82610f54565b915061136883610f54565b92508261137857611377611323565b5b828204905092915050565b600061138e82610f54565b915061139983610f54565b9250828210156113ac576113ab6111c7565b5b828203905092915050565b60006040820190506113cc6000830185610fc8565b6113d96020830184610f5e565b9392505050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b600061141660208361124c565b9150611421826113e0565b602082019050919050565b6000602082019050818103600083015261144581611409565b905091905056fea2646970667358221220bd1715a08456aae0fc687f5a07b640d805b9f751828a7bbc58f6221028a6c5f264736f6c634300080d0033";

type SwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Swapper__factory extends ContractFactory {
  constructor(...args: SwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _USDCTok: AddressLike,
    _ETHTok: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_USDCTok, _ETHTok, overrides || {});
  }
  override deploy(
    _USDCTok: AddressLike,
    _ETHTok: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_USDCTok, _ETHTok, overrides || {}) as Promise<
      Swapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Swapper__factory {
    return super.connect(runner) as Swapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapperInterface {
    return new Interface(_abi) as SwapperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Swapper {
    return new Contract(address, _abi, runner) as unknown as Swapper;
  }
}
