/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  USDCToken,
  USDCTokenInterface,
} from "../../../contracts/usdcTok.sol/USDCToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f55534443546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f55534443546f6b000000000000000000000000000000000000000000000000008152508160039080519060200190620000969291906200024b565b508060049080519060200190620000af9291906200024b565b505050620000ce3369d3c21bcecceda1000000620000d460201b60201c565b620004a6565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000146576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013d906200035c565b60405180910390fd5b6200015a600083836200024160201b60201c565b80600260008282546200016e9190620003b7565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000221919062000425565b60405180910390a36200023d600083836200024660201b60201c565b5050565b505050565b505050565b828054620002599062000471565b90600052602060002090601f0160209004810192826200027d5760008555620002c9565b82601f106200029857805160ff1916838001178555620002c9565b82800160010185558215620002c9579182015b82811115620002c8578251825591602001919060010190620002ab565b5b509050620002d89190620002dc565b5090565b5b80821115620002f7576000816000905550600101620002dd565b5090565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000344601f83620002fb565b915062000351826200030c565b602082019050919050565b60006020820190508181036000830152620003778162000335565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620003c4826200037e565b9150620003d1836200037e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000409576200040862000388565b5b828201905092915050565b6200041f816200037e565b82525050565b60006020820190506200043c600083018462000414565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048a57607f821691505b602082108103620004a0576200049f62000442565b5b50919050565b61153980620004b66000396000f3fe6080604052600436106100c65760003560e01c8063395093511161007f57806395d89b411161005957806395d89b411461029b578063a457c2d7146102c6578063a9059cbb14610303578063dd62ed3e14610340576100cd565b806339509351146101f857806340c10f191461023557806370a082311461025e576100cd565b806306fdde03146100d2578063095ea7b3146100fd57806312065fe01461013a57806318160ddd1461016557806323b872dd14610190578063313ce567146101cd576100cd565b366100cd57005b600080fd5b3480156100de57600080fd5b506100e761037d565b6040516100f49190610d88565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190610e43565b61040f565b6040516101319190610e9e565b60405180910390f35b34801561014657600080fd5b5061014f610432565b60405161015c9190610ec8565b60405180910390f35b34801561017157600080fd5b5061017a61043a565b6040516101879190610ec8565b60405180910390f35b34801561019c57600080fd5b506101b760048036038101906101b29190610ee3565b610444565b6040516101c49190610e9e565b60405180910390f35b3480156101d957600080fd5b506101e2610473565b6040516101ef9190610f52565b60405180910390f35b34801561020457600080fd5b5061021f600480360381019061021a9190610e43565b61047c565b60405161022c9190610e9e565b60405180910390f35b34801561024157600080fd5b5061025c60048036038101906102579190610e43565b6104b3565b005b34801561026a57600080fd5b5061028560048036038101906102809190610f6d565b6104c1565b6040516102929190610ec8565b60405180910390f35b3480156102a757600080fd5b506102b0610509565b6040516102bd9190610d88565b60405180910390f35b3480156102d257600080fd5b506102ed60048036038101906102e89190610e43565b61059b565b6040516102fa9190610e9e565b60405180910390f35b34801561030f57600080fd5b5061032a60048036038101906103259190610e43565b610612565b6040516103379190610e9e565b60405180910390f35b34801561034c57600080fd5b5061036760048036038101906103629190610f9a565b610635565b6040516103749190610ec8565b60405180910390f35b60606003805461038c90611009565b80601f01602080910402602001604051908101604052809291908181526020018280546103b890611009565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b5050505050905090565b60008061041a6106bc565b90506104278185856106c4565b600191505092915050565b600047905090565b6000600254905090565b60008061044f6106bc565b905061045c85828561088d565b610467858585610919565b60019150509392505050565b60006012905090565b6000806104876106bc565b90506104a88185856104998589610635565b6104a39190611069565b6106c4565b600191505092915050565b6104bd8282610b8f565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461051890611009565b80601f016020809104026020016040519081016040528092919081815260200182805461054490611009565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b5050505050905090565b6000806105a66106bc565b905060006105b48286610635565b9050838110156105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090611131565b60405180910390fd5b61060682868684036106c4565b60019250505092915050565b60008061061d6106bc565b905061062a818585610919565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a906111c3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079990611255565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108809190610ec8565b60405180910390a3505050565b60006108998484610635565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109135781811015610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc906112c1565b60405180910390fd5b61091284848484036106c4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097f90611353565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ee906113e5565b60405180910390fd5b610a02838383610ce5565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7f90611477565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b769190610ec8565b60405180910390a3610b89848484610cea565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf5906114e3565b60405180910390fd5b610c0a60008383610ce5565b8060026000828254610c1c9190611069565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ccd9190610ec8565b60405180910390a3610ce160008383610cea565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d29578082015181840152602081019050610d0e565b83811115610d38576000848401525b50505050565b6000601f19601f8301169050919050565b6000610d5a82610cef565b610d648185610cfa565b9350610d74818560208601610d0b565b610d7d81610d3e565b840191505092915050565b60006020820190508181036000830152610da28184610d4f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dda82610daf565b9050919050565b610dea81610dcf565b8114610df557600080fd5b50565b600081359050610e0781610de1565b92915050565b6000819050919050565b610e2081610e0d565b8114610e2b57600080fd5b50565b600081359050610e3d81610e17565b92915050565b60008060408385031215610e5a57610e59610daa565b5b6000610e6885828601610df8565b9250506020610e7985828601610e2e565b9150509250929050565b60008115159050919050565b610e9881610e83565b82525050565b6000602082019050610eb36000830184610e8f565b92915050565b610ec281610e0d565b82525050565b6000602082019050610edd6000830184610eb9565b92915050565b600080600060608486031215610efc57610efb610daa565b5b6000610f0a86828701610df8565b9350506020610f1b86828701610df8565b9250506040610f2c86828701610e2e565b9150509250925092565b600060ff82169050919050565b610f4c81610f36565b82525050565b6000602082019050610f676000830184610f43565b92915050565b600060208284031215610f8357610f82610daa565b5b6000610f9184828501610df8565b91505092915050565b60008060408385031215610fb157610fb0610daa565b5b6000610fbf85828601610df8565b9250506020610fd085828601610df8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061102157607f821691505b60208210810361103457611033610fda565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061107482610e0d565b915061107f83610e0d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110b4576110b361103a565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061111b602583610cfa565b9150611126826110bf565b604082019050919050565b6000602082019050818103600083015261114a8161110e565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006111ad602483610cfa565b91506111b882611151565b604082019050919050565b600060208201905081810360008301526111dc816111a0565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061123f602283610cfa565b915061124a826111e3565b604082019050919050565b6000602082019050818103600083015261126e81611232565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006112ab601d83610cfa565b91506112b682611275565b602082019050919050565b600060208201905081810360008301526112da8161129e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061133d602583610cfa565b9150611348826112e1565b604082019050919050565b6000602082019050818103600083015261136c81611330565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006113cf602383610cfa565b91506113da82611373565b604082019050919050565b600060208201905081810360008301526113fe816113c2565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611461602683610cfa565b915061146c82611405565b604082019050919050565b6000602082019050818103600083015261149081611454565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006114cd601f83610cfa565b91506114d882611497565b602082019050919050565b600060208201905081810360008301526114fc816114c0565b905091905056fea26469706673582212207ffad8907583bedceabfb97b3026aa9fa6171251eab04462e5c88ec3f8b3153b64736f6c634300080d0033";

type USDCTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDCTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDCToken__factory extends ContractFactory {
  constructor(...args: USDCTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      USDCToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): USDCToken__factory {
    return super.connect(runner) as USDCToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCTokenInterface {
    return new Interface(_abi) as USDCTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): USDCToken {
    return new Contract(address, _abi, runner) as unknown as USDCToken;
  }
}
